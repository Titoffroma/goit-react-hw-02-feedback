{"version":3,"sources":["Components/FeedbackBtn/FeedbackBtnStyled.jsx","Components/FeedbackOptions/FeedbackOptionsStyled.jsx","Components/FeedbackOptions/index.jsx","Components/Statistics/StatisticsStyled.jsx","Components/Statistics/index.jsx","Components/FeedbackCard/index.jsx","Components/Title/index.jsx","Components/Section/index.jsx","Components/Notification/index.jsx","Components/Feedback/index.jsx","Components/App/App.js","index.js"],"names":["FeedbackBtn","styled","button","Div","div","FeedbackOptions","callback","onClick","data-stat","StatValue","span","FeedbackLi","li","FeedbackUl","ul","FeedbackItem","statName","val","Statistics","good","neutral","bad","total","positivePercentage","FeedbackCard","Title","h1","attrs","children","title","props","fontSize","propTypes","PropTypes","string","isRequired","Section","Notification","message","Feedback","state","percent","handleClick","e","target","currentTarget","setState","dataset","stat","Number","countTotalFeedback","countPositiveFeedbackPercentage","this","value","dif","result","Math","round","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18751168.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst FeedbackBtn = styled.button`\r\n background: white;\r\n color: #717171;\r\n font-size: 12px;\r\n font-weight: bold;\r\n padding: 4px 10px;\r\n border: 1px solid #212121;\r\n border-radius: 4px;\r\n box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.4);\r\n &:hover {\r\n     color: #212121;\r\n }\r\n &:focus {\r\n     outline: none;\r\n     border: 1px solid #212121;\r\n }\r\n &:active {\r\n     box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);\r\n }\r\n &:not(:last-child) {\r\n     margin-right: 8px;\r\n }\r\n`\r\nexport default FeedbackBtn;","import styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  padding: 15px 0;\r\n`;\r\n\r\nexport default Div;\r\n","import FeedbackBtn from '../FeedbackBtn/FeedbackBtnStyled';\r\nimport PropTypes from 'prop-types';\r\nimport Div from './FeedbackOptionsStyled';\r\n\r\nconst FeedbackOptions = ({ callback }) => (\r\n  <Div onClick={callback}>\r\n    <FeedbackBtn data-stat=\"good\">Good</FeedbackBtn>\r\n    <FeedbackBtn data-stat=\"neutral\">Neutral</FeedbackBtn>\r\n    <FeedbackBtn data-stat=\"bad\">Bad</FeedbackBtn>\r\n  </Div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from 'styled-components';\r\n\r\nconst StatValue = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FeedbackLi = styled.li`\r\n  color: #212121;\r\n  font-size: 14px;\r\n  padding: 2px 0;\r\n`;\r\n\r\nconst FeedbackUl = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nexport { StatValue, FeedbackLi, FeedbackUl };\r\n","import PropTypes from 'prop-types';\r\nimport { StatValue, FeedbackLi, FeedbackUl } from './StatisticsStyled';\r\n\r\nconst FeedbackItem = ({ statName, val }) => (\r\n  <FeedbackLi>\r\n    {statName}: <StatValue>{val}</StatValue>\r\n  </FeedbackLi>\r\n);\r\n\r\nFeedbackItem.propTypes = {\r\n  statName: PropTypes.string.isRequired,\r\n  val: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <FeedbackUl>\r\n      <FeedbackItem statName=\"Good\" val={`${good}`} />\r\n      <FeedbackItem statName=\"Neutral\" val={`${neutral}`} />\r\n      <FeedbackItem statName=\"Bad\" val={`${bad}`} />\r\n      <FeedbackItem statName=\"Total\" val={`${total}`} />\r\n      <FeedbackItem\r\n        statName=\"Positive feedback\"\r\n        val={`${positivePercentage} %`}\r\n      />\r\n    </FeedbackUl>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from 'styled-components';\r\n\r\nconst FeedbackCard = styled.div`\r\n width: 380px;\r\n margin: 0 auto;\r\n padding: 15px;\r\n background: pink;\r\n border-radius: 10px;\r\n box-shadow: 4px 2px 12px rgba(0, 0, 0, 0.8) \r\n`\r\nexport default FeedbackCard;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1.attrs(({title}) => ({\r\n    children: title || '',\r\n}))`\r\n color: #212121;\r\n font-size: ${props => props.fontSize || 22}px;\r\n font-weight: bold;\r\n`\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Title;","import Title from '../Title';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <Title title={title} />\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Section;","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = styled.span.attrs(({ message }) => ({\r\n    children: message,\r\n}))`\r\ncolor: #212121;\r\n` \r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport FeedbackCard from '../FeedbackCard';\r\nimport Section from '../Section';\r\nimport Notification from '../Notification';\r\nimport Div from '../FeedbackOptions/FeedbackOptionsStyled';\r\n\r\nexport default class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    percent: 0,\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return this.state.good + this.state.neutral + this.state.bad + 1;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage(state, value) {\r\n    let good = state.good;\r\n    let neutral = state.neutral;\r\n    if (value === 'good') good++;\r\n    if (value === 'neutral') return state.percent;\r\n    const dif = state.total + 1 - neutral;\r\n    if (!dif) return 0;\r\n    const result = (good / dif) * 100;\r\n    return Math.round(result);\r\n  }\r\n\r\n  handleClick = e => {\r\n    if (e.target === e.currentTarget) return;\r\n    this.setState(state => {\r\n      return {\r\n        [e.target.dataset.stat]: Number(state[e.target.dataset.stat]) + 1,\r\n        total: this.countTotalFeedback(),\r\n        percent: this.countPositiveFeedbackPercentage(\r\n          state,\r\n          e.target.dataset.stat,\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Div>\r\n        <FeedbackCard>\r\n          <Section title=\"Please leave a feedback\">\r\n            <FeedbackOptions callback={this.handleClick} />\r\n          </Section>\r\n          <Section title=\"Statistics\">\r\n            {this.state.total ? (\r\n              <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.state.total}\r\n                positivePercentage={this.state.percent}\r\n              />\r\n            ) : (\r\n              <Notification message=\"No feedback given\" />\r\n            )}\r\n          </Section>\r\n        </FeedbackCard>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n","import Feedback from \"../Feedback\";\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}